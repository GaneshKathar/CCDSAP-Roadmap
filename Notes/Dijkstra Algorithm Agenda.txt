1) Agenda

2) Important points:
	
	- What is it => single source shortest path
	- brute force by considering all paths(eg. of exponential number of paths from source to destnation)
	- Why we use priority queues
	- significance of weight = 0 and weight < 0
	- Intuition of water droplet falling in water(why bfs applies)
	- Can work for negative weights, but not always
	- doesn't work for negative weight => Is this complete (negative cycles cause a problem)
		- Case 1: Even though there are negative weights, but no negative cycle, the algo works
		- Case 2: If there are negative weights and also negative cycles, the also fails 
	
	- notion of relaxation
	- make sure that you are also taking care of the parents of each node while relaxing the edges
	- Can we convert the graph with negative edges to non negative and solve the problem
		- https://www.quora.com/Can-you-add-a-large-constant-to-a-weighted-graph-with-negative-edges-so-that-all-the-weights-become-positive-then-run-Dijkstras-algorithm-starting-at-node-S-and-return-to-the-shortest-path-found-to-node-T-in-order-to-still-get-the-shortest-path
	
	- Greedy algorithm and mechanical explanation
	- Proof of Induction
	- Applications

3) Mathematical Induction:
	Goal: To prove (Statement)n or (S)n for all n>=1
		- Step 1: Prove that S1 is true ====> BASIS
		- Step2: Prove that, if (S)k is true for some k>=1, then (S) k+1 is true ===> INDUCTIVE STEP